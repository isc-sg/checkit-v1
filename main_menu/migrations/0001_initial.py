# Generated by Django 4.2.4 on 2024-03-25 22:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main_menu.models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, unique=True, verbose_name='Camera URL')),
                ('multicast_address', models.GenericIPAddressField(blank=True, default=None, null=True, protocol='IPv4', unique=True)),
                ('multicast_port', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(0)])),
                ('camera_username', models.CharField(blank=True, max_length=32, verbose_name='Username')),
                ('camera_password', models.CharField(blank=True, max_length=64, verbose_name='Password')),
                ('camera_number', models.IntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1)])),
                ('camera_name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, null=True, unique=True, verbose_name='URL friendly name')),
                ('camera_location', models.CharField(max_length=100)),
                ('image_regions', models.CharField(default='[]', max_length=300)),
                ('matching_threshold', models.DecimalField(decimal_places=2, default=0.5, max_digits=3, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('focus_value_threshold', models.DecimalField(decimal_places=2, default=0.5, max_digits=6, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('light_level_threshold', models.DecimalField(decimal_places=2, default=80, max_digits=5, validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('last_check_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date checked')),
                ('snooze', models.BooleanField(default=False, help_text='Set to true to pause checks for this camera')),
                ('trigger_new_reference_image', models.BooleanField(default=False, help_text='Set to true to enable the initiation of a new reference image')),
                ('trigger_new_reference_image_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('reference_image_version', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(9999)])),
            ],
        ),
        migrations.CreateModel(
            name='DaysOfWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_the_week', models.CharField(max_length=12, verbose_name='Days in the week')),
            ],
        ),
        migrations.CreateModel(
            name='EngineState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('RUN COMPLETED', 'Finished'), ('STARTED', 'Started'), ('ERROR', 'Error')], max_length=32)),
                ('number_of_cameras_in_run', models.PositiveIntegerField(default=0)),
                ('transaction_rate', models.PositiveIntegerField(default=0)),
                ('state_timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='run completion time')),
                ('number_failed_images', models.PositiveIntegerField(default=0)),
                ('number_pass_images', models.PositiveIntegerField(default=0)),
                ('number_others', models.PositiveIntegerField(default=0)),
                ('user', models.CharField(blank=True, choices=[('RUN COMPLETED', 'Finished'), ('STARTED', 'Started'), ('ERROR', 'Error')], default=None, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HoursInDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour_in_the_day', models.IntegerField(verbose_name='Hours in the Day')),
            ],
        ),
        migrations.CreateModel(
            name='Licensing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='license start date')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='license end date')),
                ('transaction_limit', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99999999), django.core.validators.MinValueValidator(1)])),
                ('transaction_count', models.IntegerField(default=0)),
                ('license_key', models.CharField(default='None', max_length=256)),
                ('license_owner', models.CharField(default='None', max_length=256)),
                ('site_name', models.CharField(default='None', max_length=256)),
                ('camera_limit', models.PositiveIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=300, upload_to=main_menu.models.ReferenceImage.get_image_filename, verbose_name='Reference Image')),
                ('hour', models.CharField(default=main_menu.models.ReferenceImage.get_hour, max_length=2)),
                ('light_level', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('focus_value', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('version', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(9999)])),
                ('url', models.ForeignKey(help_text='points to camera id', on_delete=django.db.models.deletion.CASCADE, to='main_menu.camera', verbose_name='Camera Name and Number')),
            ],
        ),
        migrations.CreateModel(
            name='LogImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='logs/%Y/%m/%d')),
                ('matching_score', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('region_scores', models.JSONField(default=dict)),
                ('current_matching_threshold', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('focus_value', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('current_focus_value', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True)),
                ('light_level', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('current_light_level', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('action', models.CharField(max_length=20, null=True)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('user', models.CharField(blank=True, choices=[('RUN COMPLETED', 'Finished'), ('STARTED', 'Started'), ('ERROR', 'Error')], default=None, max_length=32, null=True)),
                ('run_number', models.PositiveIntegerField(default=0)),
                ('reference_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_menu.referenceimage', verbose_name='Reference Image')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_menu.camera', verbose_name='Camera Name and Number')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalCamera',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('url', models.CharField(db_index=True, max_length=255, verbose_name='Camera URL')),
                ('multicast_address', models.GenericIPAddressField(blank=True, db_index=True, default=None, null=True, protocol='IPv4')),
                ('multicast_port', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(0)])),
                ('camera_username', models.CharField(blank=True, max_length=32, verbose_name='Username')),
                ('camera_password', models.CharField(blank=True, max_length=64, verbose_name='Password')),
                ('camera_number', models.IntegerField(db_index=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1)])),
                ('camera_name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=100, null=True, verbose_name='URL friendly name')),
                ('camera_location', models.CharField(max_length=100)),
                ('image_regions', models.CharField(default='[]', max_length=300)),
                ('matching_threshold', models.DecimalField(decimal_places=2, default=0.5, max_digits=3, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('focus_value_threshold', models.DecimalField(decimal_places=2, default=0.5, max_digits=6, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('light_level_threshold', models.DecimalField(decimal_places=2, default=80, max_digits=5, validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('last_check_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date checked')),
                ('snooze', models.BooleanField(default=False, help_text='Set to true to pause checks for this camera')),
                ('trigger_new_reference_image', models.BooleanField(default=False, help_text='Set to true to enable the initiation of a new reference image')),
                ('trigger_new_reference_image_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('reference_image_version', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(9999)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical camera',
                'verbose_name_plural': 'historical cameras',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='camera',
            name='scheduled_days',
            field=models.ManyToManyField(blank=True, help_text='List format 1-7', to='main_menu.daysofweek'),
        ),
        migrations.AddField(
            model_name='camera',
            name='scheduled_hours',
            field=models.ManyToManyField(blank=True, help_text='List format 0-23', to='main_menu.hoursinday'),
        ),
    ]
